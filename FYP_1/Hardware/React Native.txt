import { Image, StyleSheet, Text, View, Switch } from 'react-native';
import React, { useEffect, useState } from 'react';

const IOTSmartHome = () => {
  const [isEnabledAll, setIsEnabledAll] = useState(false);
  const [isEnabled, setIsEnabled] = useState(false);

  const toggleSwitch = () => {
    const newState = !isEnabled;
    setIsEnabled(newState);
    updateLightState(newState);
  };

  const GetState = async () => {
    try {
      const response = await fetch("http://192.168.220.116:5000/get_relay_state", {
        method: "GET",
        headers: { "Content-Type": "application/json" },
      });

      if (response.ok) {
        const result = await response.json();
        setIsEnabled(result.state === 1);
      } else {
        console.error("Error fetching relay state.");
      }
    } catch (error) {
      console.error("Error fetching relay state:", error);
    }
  };

  const updateLightState = async (newState) => {
    try {
      const response = await fetch("http://192.168.220.116:5000/set_relay_state", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ state: newState ? 1 : 0 }),
      });

      if (!response.ok) console.error("Error updating light state.");
    } catch (error) {
      console.error("Error updating light state:", error);
    }
  };

  useEffect(() => {
    const interval = setInterval(GetState, 200);
    return () => clearInterval(interval);
  }, []);

  return (
    <View style={styles.container}>
      <Text style={[styles.title, { marginTop: 15, textAlign: 'center', fontWeight: 'bold' }]}>Appliances</Text>

      <View style={styles.row}>
        <View style={{ flex: 1, marginRight: 15 }}>
          <Text style={[styles.applianceName, { color: 'black', textAlign: 'right' }]}>Select All</Text>
        </View>
        <View style={styles.switchContainer}>
          <View style={styles.simulatedBorder} />
          <Switch
            trackColor={{ false: "transparent", true: "transparent" }}
            thumbColor={isEnabledAll ? "#001F6D" : "#001F6D"}
            ios_backgroundColor="transparent"
            onValueChange={() => {}}
            value={false}
          />
        </View>
      </View>

      <Text style={[styles.title, { marginTop: 15, marginLeft: 35 }]}>Room-1</Text>

      <View style={styles.row}>
        <View style={[styles.textView, { marginRight: 20 }]}>
          <Text style={styles.applianceName}>Light_1</Text>
        </View>
        <View style={styles.switchContainer}>
          <View style={styles.simulatedBorder} />
          <Switch
            trackColor={{ false: "transparent", true: "transparent" }}
            thumbColor={isEnabled ? "#001F6D" : "#001F6D"}
            ios_backgroundColor="transparent"
            onValueChange={toggleSwitch}
            value={isEnabled}
            style={styles.switch}
          />
        </View>
      </View>

      <View style={styles.row}>
        <View style={[styles.textView, { marginRight: 20 }]}>
          <Text style={styles.applianceName}>Light_2</Text>
        </View>
        <View style={styles.switchContainer}>
          <View style={styles.simulatedBorder} />
          <Switch
            trackColor={{ false: "transparent", true: "transparent" }}
            thumbColor="#001F6D"
            ios_backgroundColor="transparent"
            value={false}
            style={styles.switch}
          />
        </View>
      </View>

      <View style={{ flex: 1, justifyContent: 'flex-end' }}>
        <View style={styles.plusButton}>
          <Text style={styles.plusText}>+</Text>
        </View>
        <View style={styles.footer}>
          <Text style={styles.footerText}>Home</Text>
        </View>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: 'white' },
  title: { fontSize: 20, marginTop: 10 },
  row: { flexDirection: 'row', alignItems: 'center', marginHorizontal: 25, marginTop: 15 },
  textView: { backgroundColor: '#001F6D', padding: 20, borderRadius: 20, flex: 1, borderWidth: 1 },
  applianceName: { fontSize: 18, marginLeft: 10, color: 'white' },
  switchContainer: { position: 'relative', alignItems: 'center', justifyContent: 'center', marginRight: 15 },
  simulatedBorder: {
    position: 'absolute',
    width: 50,
    height: 26,
    backgroundColor: 'white',
    borderRadius: 20,
    borderWidth: 1,
    borderColor: '#001F6D',
  },
  switch: { marginLeft: 0 },
  plusButton: {
    backgroundColor: '#001F6D',
    width: 60,
    height: 60,
    borderRadius: 30,
    position: 'absolute',
    right: 20,
    bottom: 90,
    alignItems: 'center',
    justifyContent: 'center',
    elevation: 9,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
  },
  plusText: { color: 'white', fontSize: 28, fontWeight: '300', textAlign: 'center' },
  footer: {
    backgroundColor: '#B0C4DE',
    height: 80,
    alignItems: 'center',
    justifyContent: 'center',
    borderTopWidth: 1,
    borderTopColor: 'black',
  },
  footerText: { fontSize: 18, color: 'black' },
});

export default IOTSmartHome;
